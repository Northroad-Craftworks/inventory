name: Build & Release

on:
  push:
    branches: [ main, next ]

env:
  REGISTRY: ghcr.io
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CLUSTER: northroad-craftworks-microservices
  
jobs:
  semantic-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'

      - run: npm ci
      - run: npm run build --if-present

  #     - run: npm test

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Semantic Release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v3.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 19.0.5
          extra_plugins: |
            @codedependant/semantic-release-docker@4.1.0
            conventional-changelog-eslint@3.0.9

      - name: Update Kubernetes Definition
        if: github.ref_name == 'main'
        env:
          APP_VERSION: ${{steps.semantic-release.outputs.new_release_version || steps.semantic-release.outputs.last_release_version || 'latest'}}
        run: envsubst '${APP_VERSION}' < kubernetes/app.yaml > kubernetes/app.yaml
      - name: Install doctl
        if: github.ref_name == 'main'
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Fetch Kubeconfig
        if: github.ref_name == 'main'
        run:  doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{env.CLUSTER}}
      - name: Deploy App
        if: github.ref_name == 'main'
        run: kubectl -n production apply -f kubernetes

