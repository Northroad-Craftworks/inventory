name: Build & Release

on:
  push:
    branches: [ main, next ]

env:
  REGISTRY: ghcr.io
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
jobs:
  semantic-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'

    - run: npm ci
    - run: npm run build --if-present

#     - run: npm test

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Semantic Release
      id: semantic-release
      uses: cycjimmy/semantic-release-action@v3.1.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        semantic_version: 19.0.5
        extra_plugins: |
          @codedependant/semantic-release-docker@4.1.0
          conventional-changelog-eslint@3.0.9
          semantic-release-helm3@2.3.3
    outputs:
      new_release: ${{steps.semantic-release.outputs.new_release_published}}
      version: ${{steps.semantic-release.outputs.new_release_version || steps.semantic-release.outputs.last_release_version || 'latest'}}

  production-deploy:
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    needs: semantic-release
    env:
      CLUSTER: northroad-craftworks-microservices
      VERSION_IS_NEW: ${{needs.semantic-release.outputs.new_release}}
      APP_VERSION: ${{needs.semantic-release.outputs.version}}
    # TODO Get the version from the release
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Fetch Kubeconfig
        run:  doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{env.CLUSTER}}
      - name: Deploy App
        run: kubectl -n production get pods # TODO Deploy



